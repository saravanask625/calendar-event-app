{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CalendarService = /*#__PURE__*/(() => {\n  class CalendarService {\n    constructor() {\n      this.events$ = new BehaviorSubject(this.loadEvents());\n    }\n    getEvents() {\n      return this.events$.asObservable();\n    }\n    addEvent(event) {\n      let all = this.loadEvents();\n      all.push(event);\n      this.saveEvents(all);\n      this.events$.next(all);\n    }\n    updateEvent(event) {\n      let all = this.loadEvents();\n      const i = all.findIndex(e => e.id === event.id);\n      if (i != -1) {\n        all[i] = event;\n        this.saveEvents(all);\n        this.events$.next(all);\n      }\n    }\n    deleteEvent(id) {\n      let all = this.loadEvents().filter(e => e.id !== id);\n      this.saveEvents(all);\n      this.events$.next(all);\n    }\n    loadEvents() {\n      return JSON.parse(localStorage.getItem('myEvents') || '[]');\n    }\n    saveEvents(events) {\n      localStorage.setItem('myEvents', JSON.stringify(events));\n    }\n    static {\n      this.ɵfac = function CalendarService_Factory(t) {\n        return new (t || CalendarService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CalendarService,\n        factory: CalendarService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CalendarService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}