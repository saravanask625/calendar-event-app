{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nconst EVENTS_KEY = 'my_calendar_events_v1';\nconst CATEGORIES_KEY = 'my_calendar_cats_v1';\nexport let CalendarService = /*#__PURE__*/(() => {\n  class CalendarService {\n    constructor() {\n      this.eventsSub = new BehaviorSubject(this.loadEvents());\n      this.events$ = this.eventsSub.asObservable();\n      this.categoriesSub = new BehaviorSubject(this.loadCategories());\n      this.categories$ = this.categoriesSub.asObservable();\n      this.events$.subscribe(list => {\n        try {\n          localStorage.setItem(EVENTS_KEY, JSON.stringify(list));\n        } catch {}\n      });\n      this.categories$.subscribe(list => {\n        try {\n          localStorage.setItem(CATEGORIES_KEY, JSON.stringify(list));\n        } catch {}\n      });\n    }\n    loadEvents() {\n      try {\n        return JSON.parse(localStorage.getItem(EVENTS_KEY) || '[]');\n      } catch {\n        return [];\n      }\n    }\n    loadCategories() {\n      try {\n        const raw = localStorage.getItem(CATEGORIES_KEY);\n        if (raw) return JSON.parse(raw);\n      } catch {}\n      return [{\n        id: 'work',\n        name: 'Work',\n        color: '#2563EB'\n      }, {\n        id: 'personal',\n        name: 'Personal',\n        color: '#10B981'\n      }, {\n        id: 'holiday',\n        name: 'Holiday',\n        color: '#F97316'\n      }];\n    }\n    addEvent(ev) {\n      const list = [...this.eventsSub.getValue(), ev];\n      this.eventsSub.next(list);\n    }\n    updateEvent(id, patch) {\n      const list = this.eventsSub.getValue().map(e => e.id === id ? {\n        ...e,\n        ...patch\n      } : e);\n      this.eventsSub.next(list);\n    }\n    deleteEvent(id) {\n      const list = this.eventsSub.getValue().filter(e => e.id !== id);\n      this.eventsSub.next(list);\n    }\n    eventsByDate(dateIso) {\n      return this.eventsSub.getValue().filter(e => e.date === dateIso);\n    }\n    static {\n      this.ɵfac = function CalendarService_Factory(t) {\n        return new (t || CalendarService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CalendarService,\n        factory: CalendarService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CalendarService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}